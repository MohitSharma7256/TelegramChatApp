{"version":3,"sources":["App/Firebase/Firebase.js","App/Components/Chat/MessageHeader/MessageHeader.jsx","App/Components/Chat/MessageSender/MessageSender.jsx","App/Components/Chat/Message/Message.jsx","App/Components/Chat/Chat.jsx","App/Layouts/Sidebar/SidebarRow/SidebarRow.jsx","App/Layouts/Sidebar/SidebarBottom/SidebarBottom.jsx","App/Layouts/Sidebar/Sidebar.jsx","App/Pages/ChatPage/ChatPage.jsx","App/Redux/Auth/AuthType.js","App/Redux/Auth/AuthAction.js","App/Pages/LoginPage/Login.jsx","App/Pages/MainPage/MainPage.jsx","App.js","reportWebVitals.js","App/Redux/Auth/AuthReducer.js","App/Redux/RootReducer.js","App/Redux/Store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","MessageHeader","_ref","_massages","_massages$timeStamp","massages","channelName","setChannelName","useState","seed","setSeed","channelId","useParams","db","useEffect","unsubscribe","collection","doc","onSnapshot","snapshot","data","Math","floor","random","img","concat","_jsx","className","children","_jsxs","Avatar","src","Date","length","timeStamp","toDate","toUTCString","IconButton","MoreHorizIcon","MessageSender","handleChange","setInputText","inputText","onSubmit","e","TelegramIcon","placeholder","value","onChange","target","type","TimerIcon","EmojiEmotionsIcon","MicNoneIcon","Message","currentUser","map","message","displayName","userPhotoURL","id","Chat","useSelector","state","auth","channel","setChannel","setMassages","docs","orderBy","console","log","style","flex","preventDefault","add","FieldValue","serverTimestamp","photoURL","SidebarRow","_massages$","Link","to","SidebarBottom","CallIcon","Hidden","smDown","CommentIcon","SettingsIcon","Sidebar","handleAddNewChannel","SearchIcon","onClick","BorderColorIcon","ChatPage","_Fragment","newChannel","prompt","Switch","Route","path","USER_SIGN_IN","USER_SIGN_OUT","userSignIn","user","payload","Login","dispatch","useDispatch","socialLogin","async","provider","selectedProvider","FacebookAuthProvider","GoogleAuthProvider","result","signInWithPopup","error","alt","MainPage","isAuthenticated","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authReducer","arguments","undefined","rootReducer","combineReducers","middlware","logger","store","createStore","applyMiddleware","ReactDOM","render","React","StrictMode","Provider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.9a9d01fc.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA8Z1GUDLSUcN-l5-YqrZHLaciCCPB8pEU\",\n    authDomain: \"telegram1-clone.firebaseapp.com\",\n    databaseURL: \"https://telegram1-clone.firebaseio.com\",\n    projectId: \"telegram1-clone\",\n    storageBucket: \"telegram1-clone.appspot.com\",\n    messagingSenderId: \"996835820069\",\n    appId: \"1:996835820069:web:cbf0bacf455fd9a90c35cc\",\n    measurementId: \"G-Q9LWYJW3DQ\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\nfirebase.firestore()\n\nexport default firebase;","import { Avatar, IconButton } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {useParams} from 'react-router-dom'\nimport firebase from '../../../Firebase/Firebase'\n\nimport './StyleHeader.css'\n\nexport default function MessageHeader({massages}) {\n\n    const [channelName, setChannelName] = useState('')\n    const [seed,setSeed] = useState()\n    const {channelId } = useParams()\n    const db = firebase.firestore()\n    useEffect(()=>{\n     \n        const unsubscribe = db.collection('channels').doc(channelId)\n        .onSnapshot(\n            snapshot => \n                (setChannelName(snapshot.data())))\n  \n    return () =>{\n        unsubscribe()\n    }\n    },[db, channelId])\n\n    useEffect(()=>{\n        setSeed(Math.floor(Math.random()* 5000))\n    },[channelId])\n    \n    const img = `https://avatars.dicebear.com/api/human/${seed}.svg`\n    return ( \n        <div className='header'>\n            <div className='header_main'>\n                <div className='header_left'>\n                    <Avatar src={img} />\n                    <div className='header_info'>\n                        <strong>{channelName.channelName}</strong>\n                        <p>\n                          Last seen at  {new Date (massages[massages.length -1]?.timeStamp?.toDate()).toUTCString()}\n                        </p>\n                    </div>\n                </div>\n                <IconButton>\n                    <MoreHorizIcon />\n                </IconButton> \n            </div>\n            \n        </div>\n    )\n}\n\n","import React from 'react'\nimport './MessageSender.css'\nimport TelegramIcon from '@material-ui/icons/Telegram';\nimport TimerIcon from '@material-ui/icons/Timer';\nimport EmojiEmotionsIcon from '@material-ui/icons/EmojiEmotions';\nimport MicNoneIcon from '@material-ui/icons/MicNone';\n\n\n\nexport default function MessageSender({handleChange,setInputText, inputText}) {\n    \n    \n    return (\n        <div className='message_sender'>\n            <form   onSubmit={(e)=>handleChange(e)}>\n                <div className='message'>\n                    <TelegramIcon />\n              \n                    <div className='send_input'>\n                        <input \n                        placeholder='Write Your Message Here'\n                        value={inputText}\n                        onChange={(e)=>setInputText(e.target.value)}\n                        />\n                    </div>\n                    <button type='submit' className='hidden_btn'></button>\n               \n               \n                <TimerIcon />\n                <EmojiEmotionsIcon />\n                <MicNoneIcon />\n                \n            </div>           \n            </form>\n        </div>\n    )\n}\n","import { Avatar } from '@material-ui/core'\nimport React from 'react'\nimport './StyleMessage.css'\n// import {format} from 'date-fns'\n// import { convertTimeStamp } from '../../Utils/Utils'\n\nexport default function Message({massages,currentUser }) {\n    // console.log(massages)\n    return (\n        <div className='chat'>\n           { massages.map(message =>(\n                <div \n                key={message.id} \n                className={`message_body ${ currentUser.displayName === message.displayName && 'message_body_receiver'} `}>\n                     \n                    <Avatar src={message?.userPhotoURL}/>\n                    <div className={`message_container`}>\n                        <p \n                        className={`messages ${ currentUser.displayName === message.displayName && 'message_receiver'} `}>\n                            {message?.massages}\n                            </p>\n                        {/* <p className='time_stamp '>date</p> */}\n                    </div>\n                </div>\n                ))\n            }\n        </div>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport MessageHeader from './MessageHeader/MessageHeader'\nimport MessageSender from './MessageSender/MessageSender'\nimport firebase from '../../Firebase/Firebase'\nimport {useParams} from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport Message from './Message/Message'\n\nexport default function Chat() {\n    const {channelId} = useParams()\n    const {currentUser } = useSelector(state => state.auth)\n    const [channel, setChannel] = useState([])\n    const [massages,setMassages] = useState([])\n    const [inputText, setInputText]=useState('')\n\n    const db = firebase.firestore()\n\n    // handle Submit to handle the input and take the message and send it to the firebase\n    const handleSubmit= e=>{\n        e.preventDefault();\n        console.log(inputText);\n        if (channelId){\n            db.collection('channels').doc(channelId).collection('massages').add({\n                massages: inputText,\n                timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\n                displayName: currentUser.displayName,\n                userPhotoURL: currentUser.photoURL\n\n            })\n            setInputText('')\n        }\n      \n    }\n    // get the all channel names\n    useEffect(()=>{\n        if (channelId){\n            db.collection('channels').onSnapshot(snapshot => \n                setChannel(\n                       snapshot.docs.map(doc =>({\n                       id: doc.id,\n                       data: doc.data()\n                   })\n               )\n           ))\n        }\n      \n    \n         // \n     },[db,channel,channelId ])\n    \n     // get all massages from the db\n    useEffect(()=>{\n        if (channelId){\n            db.collection('channels').doc(channelId).collection('massages')\n            .orderBy('timeStamp','asc')\n            .onSnapshot(snapshot=>{\n                 setMassages(snapshot.docs.map(doc=> doc.data()))\n             })\n      \n        }\n       \n        \n    },[channelId, db, setMassages])\n \n\n    console.log(massages);\n    return (\n        <div style={{flex: '0.7'}}> \n            <MessageHeader massages={massages} />\n            <Message currentUser={currentUser} massages={massages}/>\n                \n            <MessageSender \n            inputText={inputText} \n            handleChange={handleSubmit} \n            setInputText={setInputText}/> \n        </div>\n    )\n}\n\n\n","import { Avatar} from '@material-ui/core'\nimport { useEffect, useState } from 'react'\nimport firebase from '../../../Firebase/Firebase'\nimport { Link } from 'react-router-dom'\nimport './StyleSidebarRow.css'\n\nexport default function SidebarRow({ id,channelName}) {\n\n    const [massages, setMassages] = useState([])\n    const db = firebase.firestore()\n    const [seed, setSeed] = useState() \n\n    useEffect(()=>{\n        if (id){\n            db.collection('channels').doc(id).collection('massages')\n            .orderBy('timeStamp','desc')\n            .onSnapshot(snapshot=>{\n                 setMassages(snapshot.docs.map(doc=> doc.data()))\n             })\n      \n        }\n       \n        \n    },[id, db, setMassages])\n\n    useEffect(()=>{\n        setSeed(Math.floor(Math.random()* 5000))\n\n    },[id])\n\n    const img = `https://avatars.dicebear.com/api/human/${seed}.svg`\n    return (\n        <Link className='sidebar_row_main' to={`/channel/${id}`}>\n            <div className='sidebar_row'>\n                <div className='sidebar_left'>\n                    <Avatar src={img} />\n                    <div className='sidebar_info'>\n                        <strong  >{channelName}</strong>\n                        <p className='text'>{massages[0]?.massages}</p>\n                    </div>\n                </div>\n                <p>time</p>\n            </div>\n            <div className='line'/>\n        </Link>\n        \n    )\n}\n","import { Avatar, Hidden } from '@material-ui/core'\nimport React from 'react'\nimport CommentIcon from '@material-ui/icons/Comment';\nimport CallIcon from '@material-ui/icons/Call';\nimport SettingsIcon from '@material-ui/icons/Settings';\n\nimport './StyleSidebarBottom.css'\nimport { useSelector } from 'react-redux';\n\nexport default function SidebarBottom() {\n    const {currentUser} = useSelector(state => state.auth)\n    return (\n        <div className='sidebar_bottom_main'>\n            <div className='sidebar_bottom_icons'>\n                <Avatar src={currentUser?.photoURL ||'https://pagesix.com/wp-content/uploads/sites/3/2020/03/bebe-rexha-30.jpg?quality=80&strip=all'} />\n                <CallIcon />\n                <Hidden smDown>\n                    <CommentIcon />\n                    <SettingsIcon />\n                </Hidden>\n                \n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\n\nimport './StyleSidebar.css'\nimport { IconButton } from '@material-ui/core';\nimport SidebarRow from './SidebarRow/SidebarRow';\nimport SidebarBottom from './SidebarBottom/SidebarBottom';\n\n\nexport default function Sidebar({handleAddNewChannel,channel}) {\n\n    return (\n        <div className='sidebar'>\n            <div className='sidebar_header'>\n                <div className='search'>\n                    <SearchIcon />\n                    <input type='text' placeholder='Search for channels or users' />\n                </div>\n                <IconButton onClick={handleAddNewChannel}>\n                    <BorderColorIcon  />\n                </IconButton>\n            </div>\n            {\n                channel.map(channel =>(\n                    <SidebarRow key={channel.id} id={channel.id} channelName={channel.data.channelName} /> \n                ))\n\n            }\n            \n            <SidebarBottom />\n        </div>\n    )\n}","\nimport React, { useEffect, useState } from 'react'\nimport Chat from '../../Components/Chat/Chat'\nimport Sidebar from '../../Layouts/Sidebar/Sidebar'\nimport { Switch,  Route} from \"react-router-dom\";\nimport firebase from '../../Firebase/Firebase'\nimport './StyleChatPage.css'\n\nexport default function ChatPage() {\n    const [channel,setChannel] = useState([])\n    const db = firebase.firestore();\n\n    useEffect(()=>{\n       const unsubscribe = db.collection('channels').onSnapshot(snapshot => \n         setChannel(\n                snapshot.docs.map(doc =>({\n                id: doc.id,\n                data: doc.data()\n            })\n        )\n    ))\n    return () =>{\n        unsubscribe()\n    }\n        // \n    },[db,channel, ])\n   \n       \n    \n  \n    const handleAddNewChannel =() =>{\n       const newChannel = prompt('Enter a Channel Name');\n       if(newChannel){\n        db.collection('channels').add({\n            channelName: newChannel\n        })\n       }\n       \n    }\n    return (\n        <div className='chat_page'>\n            <>\n                <Sidebar channel={channel} handleAddNewChannel={handleAddNewChannel}/>\n                <Switch>\n                    <Route  path='/channel/:channelId'>\n                        <Chat/>\n                    </Route>\n                </Switch>\n            </>\n           \n           \n           \n        </div>\n    )\n}\n","export const USER_SIGN_IN = 'USER_SIGN_IN'\n\nexport const USER_SIGN_OUT = 'USER_SIGN_OUT'","import { USER_SIGN_IN, USER_SIGN_OUT } from \"./AuthType\";\n\n\nexport const userSignIn = user =>({\n    type: USER_SIGN_IN,\n    payload: user\n}) \n\nexport const userSignOut = () =>({\n    type: USER_SIGN_OUT,\n  \n}) ","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport './StyleLogin.css'\nimport firebase from '../../Firebase/Firebase'\nimport { userSignIn } from '../../Redux/Auth/AuthAction';\n\nexport default function Login() {\n\n    const dispatch = useDispatch();\n\n    const signIn = (selectedProvider) => {\n        socialLogin(selectedProvider);\n    };\n     const socialLogin = async (selectedProvider) => {\n\n        let provider;\n    \n        const auth = firebase.auth();\n        if (selectedProvider === \"facebook\") {\n            provider = new firebase.auth.FacebookAuthProvider();\n        }\n        if (selectedProvider === \"google\") {\n            provider = new firebase.auth.GoogleAuthProvider();\n        }\n        try {\n            const result = await auth.signInWithPopup(provider);\n            console.log(result.user);\n            dispatch(userSignIn(result.user));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    \n\n   \n    return (\n        <div className='login'>\n            <img src={img} alt=' Logo' />\n            <button onClick ={()=>signIn('google')}>Login to Telegram</button>\n        </div>\n    )\n}\n\nconst img ='https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/768px-Telegram_logo.svg.png'\n\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport ChatPage from '../ChatPage/ChatPage'\nimport Login from '../LoginPage/Login'\n\nexport default function MainPage() {\n    const { isAuthenticated } = useSelector(state =>  state.auth)\n    return (\n        <div className='main_page'>\n            {!isAuthenticated?\n             <Login /> : <ChatPage />\n            }\n           \n        </div>\n    )\n}\n","import React from 'react'\nimport MainPage from './App/Pages/MainPage/MainPage'\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainPage />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// eslint-disable-next-line \nimport { USER_SIGN_IN, USER_SIGN_OUT } from \"./AuthType\";\n\n\nconst initialState ={\n    isAuthenticated: false,\n    currentUser: null\n}\n\nconst authReducer =(state = initialState , {type, payload}) =>{\n    switch(type){\n        case USER_SIGN_IN:\n            return{\n                ...state,\n                isAuthenticated: true,\n                currentUser: payload,\n            }\n        case USER_SIGN_OUT: \n            return{\n                ...state,\n                isAuthenticated: false,\n                currentUser: null,\n            } \n        default: return state\n\n    }\n}\n\n\nexport default  authReducer;","// eslint-disable-next-line strict\n'use strict'\nimport {\n    combineReducers\n} from 'redux';\n\nimport authReducer from './Auth/AuthReducer'\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n})\nexport default rootReducer","import {\n    createStore,\n    applyMiddleware\n} from 'redux';\n\n\nimport rootReducer from './RootReducer'\nimport logger from 'redux-logger';\n\nconst middlware = [logger];\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlware));\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport { store } from './App/Redux/Store'\nimport { BrowserRouter } from 'react-router-dom' \n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}