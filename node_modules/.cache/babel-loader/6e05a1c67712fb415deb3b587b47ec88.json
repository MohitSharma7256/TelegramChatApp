{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Telegram-clone-main\\\\Telegram-clone-main\\\\src\\\\App\\\\Components\\\\Chat\\\\MessageHeader\\\\MessageHeader.jsx\",\n  _s = $RefreshSig$();\nimport { Avatar, IconButton } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { useParams } from 'react-router-dom';\nimport firebase from '../../../Firebase/Firebase';\nimport './StyleHeader.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MessageHeader({\n  massages\n}) {\n  _s();\n  var _massages, _massages$timeStamp;\n  const [channelName, setChannelName] = useState('');\n  const [seed, setSeed] = useState();\n  const {\n    channelId\n  } = useParams();\n  const db = firebase.firestore();\n  useEffect(() => {\n    const unsubscribe = db.collection('channels').doc(channelId).onSnapshot(snapshot => setChannelName(snapshot.data()));\n    return () => {\n      unsubscribe();\n    };\n  }, [db, channelId]);\n  useEffect(() => {\n    setSeed(Math.floor(Math.random() * 5000));\n  }, [channelId]);\n  const img = `https://avatars.dicebear.com/api/human/${seed}.svg`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header_main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header_left\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          src: img\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: channelName.channelName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Last seen at  \", new Date((_massages = massages[massages.length - 1]) === null || _massages === void 0 ? void 0 : (_massages$timeStamp = _massages.timeStamp) === null || _massages$timeStamp === void 0 ? void 0 : _massages$timeStamp.toDate()).toUTCString()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        children: /*#__PURE__*/_jsxDEV(MoreHorizIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(MessageHeader, \"RvwQA7XRf3BOVdTk8WG35Cj2rsg=\", false, function () {\n  return [useParams];\n});\n_c = MessageHeader;\nvar _c;\n$RefreshReg$(_c, \"MessageHeader\");","map":{"version":3,"names":["Avatar","IconButton","React","useEffect","useState","MoreHorizIcon","useParams","firebase","jsxDEV","_jsxDEV","MessageHeader","massages","_s","_massages","_massages$timeStamp","channelName","setChannelName","seed","setSeed","channelId","db","firestore","unsubscribe","collection","doc","onSnapshot","snapshot","data","Math","floor","random","img","className","children","src","fileName","_jsxFileName","lineNumber","columnNumber","Date","length","timeStamp","toDate","toUTCString","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Telegram-clone-main/Telegram-clone-main/src/App/Components/Chat/MessageHeader/MessageHeader.jsx"],"sourcesContent":["import { Avatar, IconButton } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport {useParams} from 'react-router-dom'\nimport firebase from '../../../Firebase/Firebase'\n\nimport './StyleHeader.css'\n\nexport default function MessageHeader({massages}) {\n\n    const [channelName, setChannelName] = useState('')\n    const [seed,setSeed] = useState()\n    const {channelId } = useParams()\n    const db = firebase.firestore()\n    useEffect(()=>{\n     \n        const unsubscribe = db.collection('channels').doc(channelId)\n        .onSnapshot(\n            snapshot => \n                (setChannelName(snapshot.data())))\n  \n    return () =>{\n        unsubscribe()\n    }\n    },[db, channelId])\n\n    useEffect(()=>{\n        setSeed(Math.floor(Math.random()* 5000))\n    },[channelId])\n    \n    const img = `https://avatars.dicebear.com/api/human/${seed}.svg`\n    return ( \n        <div className='header'>\n            <div className='header_main'>\n                <div className='header_left'>\n                    <Avatar src={img} />\n                    <div className='header_info'>\n                        <strong>{channelName.channelName}</strong>\n                        <p>\n                          Last seen at  {new Date (massages[massages.length -1]?.timeStamp?.toDate()).toUTCString()}\n                        </p>\n                    </div>\n                </div>\n                <IconButton>\n                    <MoreHorizIcon />\n                </IconButton> \n            </div>\n            \n        </div>\n    )\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}