{"ast":null,"code":"import React from'react';import{useDispatch}from'react-redux';import'./StyleLogin.css';import firebase from'../../Firebase/Firebase';import{userSignIn}from'../../Redux/Auth/AuthAction';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Login(){const dispatch=useDispatch();const signIn=selectedProvider=>{socialLogin(selectedProvider);};const socialLogin=async selectedProvider=>{let provider;const auth=firebase.auth();if(selectedProvider===\"facebook\"){provider=new firebase.auth.FacebookAuthProvider();}if(selectedProvider===\"google\"){provider=new firebase.auth.GoogleAuthProvider();}try{const result=await auth.signInWithPopup(provider);console.log(result.user);dispatch(userSignIn(result.user));}catch(error){console.log(error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"login\",children:[/*#__PURE__*/_jsx(\"img\",{src:img,alt:\" Logo\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>signIn('google'),children:\"Login to Telegram\"})]});}const img='https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/768px-Telegram_logo.svg.png';","map":{"version":3,"names":["React","useDispatch","firebase","userSignIn","jsx","_jsx","jsxs","_jsxs","Login","dispatch","signIn","selectedProvider","socialLogin","provider","auth","FacebookAuthProvider","GoogleAuthProvider","result","signInWithPopup","console","log","user","error","className","children","src","img","alt","onClick"],"sources":["C:/Users/hp/Downloads/Telegram-clone-main/Telegram-clone-main/src/App/Pages/LoginPage/Login.jsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport './StyleLogin.css'\nimport firebase from '../../Firebase/Firebase'\nimport { userSignIn } from '../../Redux/Auth/AuthAction';\n\nexport default function Login() {\n\n    const dispatch = useDispatch();\n\n    const signIn = (selectedProvider) => {\n        socialLogin(selectedProvider);\n    };\n     const socialLogin = async (selectedProvider) => {\n\n        let provider;\n    \n        const auth = firebase.auth();\n        if (selectedProvider === \"facebook\") {\n            provider = new firebase.auth.FacebookAuthProvider();\n        }\n        if (selectedProvider === \"google\") {\n            provider = new firebase.auth.GoogleAuthProvider();\n        }\n        try {\n            const result = await auth.signInWithPopup(provider);\n            console.log(result.user);\n            dispatch(userSignIn(result.user));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    \n\n   \n    return (\n        <div className='login'>\n            <img src={img} alt=' Logo' />\n            <button onClick ={()=>signIn('google')}>Login to Telegram</button>\n        </div>\n    )\n}\n\nconst img ='https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/768px-Telegram_logo.svg.png'\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,WAAW,KAAQ,aAAa,CACzC,MAAO,kBAAkB,CACzB,MAAO,CAAAC,QAAQ,KAAM,yBAAyB,CAC9C,OAASC,UAAU,KAAQ,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzD,cAAe,SAAS,CAAAC,KAAKA,CAAA,CAAG,CAE5B,KAAM,CAAAC,QAAQ,CAAGR,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAS,MAAM,CAAIC,gBAAgB,EAAK,CACjCC,WAAW,CAACD,gBAAgB,CAAC,CACjC,CAAC,CACA,KAAM,CAAAC,WAAW,CAAG,KAAO,CAAAD,gBAAgB,EAAK,CAE7C,GAAI,CAAAE,QAAQ,CAEZ,KAAM,CAAAC,IAAI,CAAGZ,QAAQ,CAACY,IAAI,CAAC,CAAC,CAC5B,GAAIH,gBAAgB,GAAK,UAAU,CAAE,CACjCE,QAAQ,CAAG,GAAI,CAAAX,QAAQ,CAACY,IAAI,CAACC,oBAAoB,CAAC,CAAC,CACvD,CACA,GAAIJ,gBAAgB,GAAK,QAAQ,CAAE,CAC/BE,QAAQ,CAAG,GAAI,CAAAX,QAAQ,CAACY,IAAI,CAACE,kBAAkB,CAAC,CAAC,CACrD,CACA,GAAI,CACA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAH,IAAI,CAACI,eAAe,CAACL,QAAQ,CAAC,CACnDM,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,IAAI,CAAC,CACxBZ,QAAQ,CAACN,UAAU,CAACc,MAAM,CAACI,IAAI,CAAC,CAAC,CACrC,CAAE,MAAOC,KAAK,CAAE,CACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CACtB,CACJ,CAAC,CAID,mBACIf,KAAA,QAAKgB,SAAS,CAAC,OAAO,CAAAC,QAAA,eAClBnB,IAAA,QAAKoB,GAAG,CAAEC,GAAI,CAACC,GAAG,CAAC,OAAO,CAAE,CAAC,cAC7BtB,IAAA,WAAQuB,OAAO,CAAGA,CAAA,GAAIlB,MAAM,CAAC,QAAQ,CAAE,CAAAc,QAAA,CAAC,mBAAiB,CAAQ,CAAC,EACjE,CAAC,CAEd,CAEA,KAAM,CAAAE,GAAG,CAAE,yGAAyG","ignoreList":[]},"metadata":{},"sourceType":"module"}