{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Telegram-clone-main\\\\Telegram-clone-main\\\\src\\\\App\\\\Pages\\\\LoginPage\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport './StyleLogin.css';\nimport firebase from '../../Firebase/Firebase';\nimport { userSignIn } from '../../Redux/Auth/AuthAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n  const dispatch = useDispatch();\n  const signIn = selectedProvider => {\n    socialLogin(selectedProvider);\n  };\n  const socialLogin = async selectedProvider => {\n    let provider;\n    const auth = firebase.auth();\n    if (selectedProvider === \"facebook\") {\n      provider = new firebase.auth.FacebookAuthProvider();\n    }\n    if (selectedProvider === \"google\") {\n      provider = new firebase.auth.GoogleAuthProvider();\n    }\n    try {\n      const result = await auth.signInWithPopup(provider);\n      console.log(result.user);\n      dispatch(userSignIn(result.user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      alt: \" Logo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => signIn('google'),\n      children: \"Login to Telegram\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(Login, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = Login;\nconst img = 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/768px-Telegram_logo.svg.png';\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useDispatch","firebase","userSignIn","jsxDEV","_jsxDEV","Login","_s","dispatch","signIn","selectedProvider","socialLogin","provider","auth","FacebookAuthProvider","GoogleAuthProvider","result","signInWithPopup","console","log","user","error","className","children","src","img","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Telegram-clone-main/Telegram-clone-main/src/App/Pages/LoginPage/Login.jsx"],"sourcesContent":["import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport './StyleLogin.css'\nimport firebase from '../../Firebase/Firebase'\nimport { userSignIn } from '../../Redux/Auth/AuthAction';\n\nexport default function Login() {\n\n    const dispatch = useDispatch();\n\n    const signIn = (selectedProvider) => {\n        socialLogin(selectedProvider);\n    };\n     const socialLogin = async (selectedProvider) => {\n\n        let provider;\n    \n        const auth = firebase.auth();\n        if (selectedProvider === \"facebook\") {\n            provider = new firebase.auth.FacebookAuthProvider();\n        }\n        if (selectedProvider === \"google\") {\n            provider = new firebase.auth.GoogleAuthProvider();\n        }\n        try {\n            const result = await auth.signInWithPopup(provider);\n            console.log(result.user);\n            dispatch(userSignIn(result.user));\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    \n\n   \n    return (\n        <div className='login'>\n            <img src={img} alt=' Logo' />\n            <button onClick ={()=>signIn('google')}>Login to Telegram</button>\n        </div>\n    )\n}\n\nconst img ='https://upload.wikimedia.org/wikipedia/commons/thumb/8/82/Telegram_logo.svg/768px-Telegram_logo.svg.png'\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,kBAAkB;AACzB,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,UAAU,QAAQ,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAE5B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,MAAM,GAAIC,gBAAgB,IAAK;IACjCC,WAAW,CAACD,gBAAgB,CAAC;EACjC,CAAC;EACA,MAAMC,WAAW,GAAG,MAAOD,gBAAgB,IAAK;IAE7C,IAAIE,QAAQ;IAEZ,MAAMC,IAAI,GAAGX,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC5B,IAAIH,gBAAgB,KAAK,UAAU,EAAE;MACjCE,QAAQ,GAAG,IAAIV,QAAQ,CAACW,IAAI,CAACC,oBAAoB,CAAC,CAAC;IACvD;IACA,IAAIJ,gBAAgB,KAAK,QAAQ,EAAE;MAC/BE,QAAQ,GAAG,IAAIV,QAAQ,CAACW,IAAI,CAACE,kBAAkB,CAAC,CAAC;IACrD;IACA,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMH,IAAI,CAACI,eAAe,CAACL,QAAQ,CAAC;MACnDM,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,IAAI,CAAC;MACxBZ,QAAQ,CAACL,UAAU,CAACa,MAAM,CAACI,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;IACtB;EACJ,CAAC;EAID,oBACIhB,OAAA;IAAKiB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBlB,OAAA;MAAKmB,GAAG,EAAEC,GAAI;MAACC,GAAG,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7BzB,OAAA;MAAQ0B,OAAO,EAAGA,CAAA,KAAItB,MAAM,CAAC,QAAQ,CAAE;MAAAc,QAAA,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEd;AAACvB,EAAA,CAnCuBD,KAAK;EAAA,QAERL,WAAW;AAAA;AAAA+B,EAAA,GAFR1B,KAAK;AAqC7B,MAAMmB,GAAG,GAAE,yGAAyG;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}