{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Downloads\\\\Telegram-clone-main\\\\Telegram-clone-main\\\\src\\\\App\\\\Layouts\\\\Sidebar\\\\Sidebar.jsx\";\nimport React from 'react';\nimport SearchIcon from '@material-ui/icons/Search';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport './StyleSidebar.css';\nimport { IconButton } from '@material-ui/core';\nimport SidebarRow from './SidebarRow/SidebarRow';\nimport SidebarBottom from './SidebarBottom/SidebarBottom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Sidebar({\n  handleAddNewChannel,\n  channel\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar_header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for channels or users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleAddNewChannel,\n        children: /*#__PURE__*/_jsxDEV(BorderColorIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), channel.map(channel => /*#__PURE__*/_jsxDEV(SidebarRow, {\n      id: channel.id,\n      channelName: channel.data.channelName\n    }, channel.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(SidebarBottom, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_c = Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","SearchIcon","BorderColorIcon","IconButton","SidebarRow","SidebarBottom","jsxDEV","_jsxDEV","Sidebar","handleAddNewChannel","channel","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","map","id","channelName","data","_c","$RefreshReg$"],"sources":["C:/Users/hp/Downloads/Telegram-clone-main/Telegram-clone-main/src/App/Layouts/Sidebar/Sidebar.jsx"],"sourcesContent":["import React from 'react'\nimport SearchIcon from '@material-ui/icons/Search';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\n\nimport './StyleSidebar.css'\nimport { IconButton } from '@material-ui/core';\nimport SidebarRow from './SidebarRow/SidebarRow';\nimport SidebarBottom from './SidebarBottom/SidebarBottom';\n\n\nexport default function Sidebar({handleAddNewChannel,channel}) {\n\n    return (\n        <div className='sidebar'>\n            <div className='sidebar_header'>\n                <div className='search'>\n                    <SearchIcon />\n                    <input type='text' placeholder='Search for channels or users' />\n                </div>\n                <IconButton onClick={handleAddNewChannel}>\n                    <BorderColorIcon  />\n                </IconButton>\n            </div>\n            {\n                channel.map(channel =>(\n                    <SidebarRow key={channel.id} id={channel.id} channelName={channel.data.channelName} /> \n                ))\n\n            }\n            \n            <SidebarBottom />\n        </div>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,2BAA2B;AAClD,OAAOC,eAAe,MAAM,gCAAgC;AAE5D,OAAO,oBAAoB;AAC3B,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,aAAa,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1D,eAAe,SAASC,OAAOA,CAAC;EAACC,mBAAmB;EAACC;AAAO,CAAC,EAAE;EAE3D,oBACIH,OAAA;IAAKI,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpBL,OAAA;MAAKI,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC3BL,OAAA;QAAKI,SAAS,EAAC,QAAQ;QAAAC,QAAA,gBACnBL,OAAA,CAACN,UAAU;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACdT,OAAA;UAAOU,IAAI,EAAC,MAAM;UAACC,WAAW,EAAC;QAA8B;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/D,CAAC,eACNT,OAAA,CAACJ,UAAU;QAACgB,OAAO,EAAEV,mBAAoB;QAAAG,QAAA,eACrCL,OAAA,CAACL,eAAe;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC,EAEFN,OAAO,CAACU,GAAG,CAACV,OAAO,iBACfH,OAAA,CAACH,UAAU;MAAkBiB,EAAE,EAAEX,OAAO,CAACW,EAAG;MAACC,WAAW,EAAEZ,OAAO,CAACa,IAAI,CAACD;IAAY,GAAlEZ,OAAO,CAACW,EAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0D,CACxF,CAAC,eAINT,OAAA,CAACF,aAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd;AAACQ,EAAA,GAvBuBhB,OAAO;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}